name: homelab

services:
  # Essentials
 
  cloudflare-ddns:
    extends:
      file: defaults.yaml
      service: default
    image: oznu/cloudflare-ddns
    environment:
      API_KEY: "{{ secret_cloudflare_api_token }}"
      ZONE: "{{ domain }}"
      INTERFACE: eth0
      PROXIED: "true"
      RRTYPE: AAAA
    network_mode: host

  crowdsec:
    extends:
      file: defaults.yaml
      service: default
    image: crowdsecurity/crowdsec
    networks:
      - default
      - external
    volumes:
      - {{ path_app_config }}/crowdsec:/etc/crowdsec
      - {{ path_app_logs }}/crowdsec:/var/log/nginx
      - {{ path_app_data }}/crowdsec:/var/lib/crowdsec/data

  themepark:
    extends:
      file: defaults.yaml
      service: default
    image: ghcr.io/themepark-dev/theme.park
    ports:
      - 8084:80
      - 8444:443
    volumes:
      - {{ path_app_config }}/themepark:/config
    labels:
      traefik.enable: "true"
      traefik.http.routers.themepark.entrypoints: "websecure"
      traefik.http.routers.themepark.rule: "Host(`themepark.{{ domain }}`)"
      traefik.http.routers.themepark.middlewares: "default@file"
      traefik.http.services.themepark.loadbalancer.server.port: "80"
  
  traefik:
    extends:
      file: defaults.yaml
      service: default
    image: traefik:v2.9
    environment:
      CF_DNS_API_TOKEN: "{{ secret_cloudflare_api_token }}"
    networks:
      - default
      - external
    ports:
      - {{ port_http_internal }}:80
      - {{ port_https_internal }}:443
      - 8080:8080
    volumes:
      - {{ path_app_config }}/traefik:/etc/traefik
      - {{ path_app_config }}/traefik/acme:/etc/traefik/acme
      - /var/run/docker.sock:/var/run/docker.sock

  # Media

  audiobookshelf:
    extends:
      file: defaults.yaml
      service: default
    image: ghcr.io/advplyr/audiobookshelf:2.7.0
    ports:
      - 13378:80
    volumes:
      - {{ path_app_config }}/audiobookshelf:/config
      - {{ path_app_data }}/audiobookshelf:/metadata
      - {{ path_storage }}:/storage
    networks:
      - default
      - external
    labels:
      homepage.group: Media
      homepage.name: Audiobookshelf
      homepage.icon: audiobookshelf.png
      homepage.href: https://audiobookshelf.{{ domain }}
      homepage.description: Audiobook and podcast manager
      traefik.enable: "true"
      traefik.http.routers.audiobookshelf.entrypoints: "websecure"
      traefik.http.routers.audiobookshelf.rule: "Host(`audiobookshelf.{{ domain }}`)"
      traefik.http.routers.audiobookshelf.middlewares: "default@file"

  bazarr:
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/bazarr:latest
    environment:
      DOCKER_MODS: "ghcr.io/themepark-dev/theme.park:bazarr"
      TP_DOMAIN: "themepark.{{ domain }}"
      TP_THEME: "frappe"
    networks:
      - default
      - external
    ports:
      - 6767:6767
    volumes:
      - {{ path_app_config }}/bazarr:/config
      - {{ path_storage }}:/storage
    labels:
      homepage.group: Media
      homepage.name: Bazarr
      homepage.icon: bazarr.png
      homepage.href: https://bazarr.{{ domain }}
      homepage.description: Subtitle manager
      homepage.widget.type: bazarr
      homepage.widget.url: https://bazarr.{{ domain }}
      homepage.widget.key: "{{ secret_bazarr_api_key }}"
      traefik.enable: "true"
      traefik.http.routers.bazarr.entrypoints: "websecure"
      traefik.http.routers.bazarr.rule: "Host(`bazarr.{{ domain }}`)"
      traefik.http.routers.bazarr.middlewares: "default@file"

  lazylibrarian:
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/lazylibrarian:latest
    environment:
      - DOCKER_MODS=linuxserver/mods:universal-calibre|linuxserver/mods:lazylibrarian-ffmpeg #optional
    ports:
      - 5299:5299
    volumes:
      - {{ path_app_config }}/lazylibrarian:/config
      - {{ path_storage }}:/storage
    networks:
      - default
      - external
    labels:
      homepage.group: Media
      homepage.name: LazyLibrarian
      homepage.icon: lazylibrarian.png
      homepage.href: https://lazylibrarian.{{ domain }}
      homepage.description: Book manager
      traefik.enable: "true"
      traefik.http.routers.lazylibrarian.entrypoints: "websecure"
      traefik.http.routers.lazylibrarian.rule: "Host(`lazylibrarian.{{ domain }}`)"
      traefik.http.routers.lazylibrarian.middlewares: "default@file"
  
  radarr:
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/radarr:latest
    environment:
      DOCKER_MODS: "ghcr.io/themepark-dev/theme.park:radarr"
      TP_DOMAIN: "themepark.{{ domain }}"
      TP_THEME: "frappe"
    networks:
      - default
      - external
    ports:
      - 7878:7878
    volumes:
      - {{ path_app_config }}/radarr:/config
      - {{ path_storage }}:/storage
    labels:
      homepage.group: Media
      homepage.name: Radarr
      homepage.icon: radarr.png
      homepage.href: https://radarr.{{ domain }}
      homepage.description: Movie manager
      homepage.weight: -60000
      homepage.widget.type: radarr
      homepage.widget.url: https://radarr.{{ domain }}
      homepage.widget.key: {{ secret_radarr_api_key }}
      traefik.enable: "true"
      traefik.http.routers.radarr.entrypoints: "websecure"
      traefik.http.routers.radarr.rule: "Host(`radarr.{{ domain }}`)"
      traefik.http.routers.radarr.middlewares: "default@file"

  sonarr:
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/sonarr:latest
    environment:
      DOCKER_MODS: "ghcr.io/themepark-dev/theme.park:sonarr"
      TP_DOMAIN: "themepark.{{ domain }}"
      TP_THEME: "frappe"
    networks:
      - default
      - external
    ports:
      - 8989:8989
    volumes:
      - {{ path_app_config }}/sonarr:/config
      - {{ path_storage }}:/storage
    labels:
      homepage.group: Media
      homepage.name: Sonarr
      homepage.icon: sonarr.png
      homepage.href: https://sonarr.{{ domain }}
      homepage.description: Series manager
      homepage.weight: -70000
      homepage.widget.type: sonarr
      homepage.widget.url: https://sonarr.{{ domain }}
      homepage.widget.key: {{ secret_sonarr_api_key }}
      traefik.enable: "true"
      traefik.http.routers.sonarr.entrypoints: "websecure"
      traefik.http.routers.sonarr.rule: "Host(`sonarr.{{ domain }}`)"
      traefik.http.routers.sonarr.middlewares: "default@file"
  
  jellyseerr:
    extends:
      file: defaults.yaml
      service: default
    image: fallenbagel/jellyseerr:latest
    networks:
      - default
      - external
    ports:
      - 5055:5055
    volumes:
      - {{ path_app_config }}/jellyseerr:/app/config
    labels:
      homepage.group: Media
      homepage.name: Jellyseerr
      homepage.icon: jellyseerr.png
      homepage.href: https://jellyseerr.{{ domain }}
      homepage.description: Media requester
      homepage.weight: -80000
      homepage.widget.type: jellyseerr
      homepage.widget.url: https://jellyseerr.{{ domain }}
      homepage.widget.key: {{ secret_jellyseerr_api_key }}
      traefik.enable: "true"
      traefik.http.routers.jellyseerr.entrypoints: "websecure"
      traefik.http.routers.jellyseerr.rule: "Host(`jellyseerr.{{ domain }}`)"
      traefik.http.routers.jellyseerr.middlewares: "default@file"
  
  prowlarr:
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/prowlarr:latest
    environment:
      DOCKER_MODS: "ghcr.io/themepark-dev/theme.park:prowlarr"
      TP_DOMAIN: "themepark.{{ domain }}"
      TP_THEME: "frappe"
    networks:
      - default
      - external
    ports:
      - 9696:9696
    volumes:
      - {{ path_app_config }}/prowlarr:/config
    labels:
      homepage.group: Media
      homepage.name: Prowlarr
      homepage.icon: prowlarr.png
      homepage.href: https://prowlarr.{{ domain }}
      homepage.description: Arr index manager
      homepage.widget.type: prowlarr
      homepage.widget.url: https://prowlarr.{{ domain }}
      homepage.widget.key: "{{ secret_prowlarr_api_key }}"
      traefik.enable: "true"
      traefik.http.routers.prowlarr.entrypoints: "websecure"
      traefik.http.routers.prowlarr.rule: "Host(`prowlarr.{{ domain }}`)"
      traefik.http.routers.prowlarr.middlewares: "default@file"
  
  # Other

  actual-server:
    extends:
      file: defaults.yaml
      service: default
    image: actualbudget/actual-server:latest
    environment: {}
      # - ACTUAL_UPLOAD_FILE_SYNC_SIZE_LIMIT_MB=20
      # - ACTUAL_UPLOAD_SYNC_ENCRYPTED_FILE_SYNC_SIZE_LIMIT_MB=50
      # - ACTUAL_UPLOAD_FILE_SIZE_LIMIT_MB=20
    networks:
      - default
      - external
    ports:
      - 5006:5006
    volumes:
      - {{ path_app_data }}/actual-server:/data
    labels:
      traefik.enable: "true"
      traefik.http.routers.actual.entrypoints: "websecure"
      traefik.http.routers.actual.rule: "Host(`actual.{{ domain }}`)"
      traefik.http.routers.actual.middlewares: "default@file"

  adguardhome-sync:
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/adguardhome-sync:latest
    ports:
      - 8082:8082/tcp
    volumes:
      - "{{ path_app_config }}/adguardhome-sync:/config"

  homepage:
    image: ghcr.io/gethomepage/homepage:v0.8.0
    networks:
      - default
      - external
    ports:
      - 3000:3000
    volumes:
      - {{ path_app_config }}/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
      - {{ path_storage }}:/storage:ro
    labels:
      traefik.enable: "true"
      traefik.http.routers.home.entrypoints: "websecure"
      traefik.http.routers.home.rule: "Host(`home.{{ domain }}`)"
      traefik.http.routers.home.middlewares: "default@file"
  
  forgejo-server:
    extends:
      file: defaults.yaml
      service: default
    image: codeberg.org/forgejo/forgejo:1.20
    environment:
      USER_UID: 1000
      USER_GID: 1000
      FORGEJO__actions__ENABLED: "true"
      FORGEJO__database__DB_TYPE: postgres
      FORGEJO__database__HOST: forgejo-db:5432
      FORGEJO__database__NAME: forgejo
      FORGEJO__database__USER: forgejo
      FORGEJO__database__PASSWD: "{{ secret_forgejo_db_password }}"
      FORGEJO__mailer__ENABLED: "true"
      FORGEJO__mailer__FROM: "forgejo@{{ domain }}"
      FORGEJO__mailer__PROTOCOL: starttls
      FORGEJO__mailer__SMTP_ADDR: "{{ secret_smtp_host }}"
      FORGEJO__mailer__SMTP_PORT: "{{ secret_smtp_port }}"
      FORGEJO__mailer__USER: "{{ secret_smtp_user }}"
      FORGEJO__mailer__PASSWD: "{{ secret_smtp_password }}"
      FORGEJO__service__DISABLE_REGISTRATION: "true"
      FORGEJO__service__REGISTER_MANUAL_CONFIRM: "true"
    networks:
      - default
      - external
    ports:
      - "3001:3000"
      - "222:22"
    volumes:
      - {{ path_app_data }}/forgejo-server:/data
    labels:
      homepage.group: Other
      homepage.name: Forgejo
      homepage.icon: forgejo.png
      homepage.href: https://git.{{ domain }}
      homepage.description: Code forge
      traefik.enable: "true"
      traefik.http.routers.git.entrypoints: "websecure"
      traefik.http.routers.git.rule: "Host(`git.{{ domain }}`)"
      traefik.http.routers.git.middlewares: "default@file"
      traefik.http.services.git.loadbalancer.server.port: "3000"
    depends_on:
      - forgejo-db

  forgejo-db:
    extends:
      file: defaults.yaml
      service: default
    image: postgres:14
    environment:
      POSTGRES_USER: forgejo
      POSTGRES_PASSWORD: "{{ secret_forgejo_db_password }}"
      POSTGRES_DB: forgejo
    networks:
      - default
    volumes:
      - {{ path_app_data }}/forgejo-postgres:/var/lib/postgresql/data

  influxdb:
    extends:
      file: defaults.yaml
      service: default
    image: influxdb:latest
    networks:
      - default
      - external
    ports:
      - 8086:8086
    volumes:
      - {{ path_app_config }}/influxdb:/etc/influxdb2
      - {{ path_app_data }}/influxdb:/var/lib/influxdb2

  jackett:
    profiles: [ disable ]
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/jackett
    networks:
      - default
      - external
    ports:
      - 9117:9117
    volumes:
      - {{ path_app_config }}/jackett:/config
      - {{ path_storage }}:/storage

  jellyfin:
    profiles: [ disable ]
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/jellyfin
    environment:
      DOCKER_MODS: "linuxserver/mods:jellyfin-opencl-intel"
    networks:
      - default
      - external
    ports:
      - 8096:8096
      - 7359:7359
      - 1900:1900
    volumes:
      - "{{ path_app_config }}/jellyfin:/config"
      - "{{ path_storage }}:/data"
    devices:
      - "/dev/dri:/dev/dri"

  qbittorrent:
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/qbittorrent:latest
    environment:
      WEBUI_PORT: "8081"
      DOCKER_MODS: "ghcr.io/themepark-dev/theme.park:qbittorrent"
      TP_DOMAIN: "themepark.{{ domain }}"
      TP_THEME: "frappe"
    networks:
      - default
      - external
    ports:
      - 8081:8081
      - 6881:6881
      - 6881:6881/udp
    volumes:
      - {{ path_app_config }}/qbittorrent:/config
      - {{ path_storage }}/Downloads/Torrents:/downloads
    labels:
      homepage.group: Other
      homepage.name: qBittorrent
      homepage.icon: qbittorrent.png
      homepage.href: https://qbittorrent.{{ domain }}
      homepage.description: Torrent downloader
      homepage.widget.type: qbittorrent
      homepage.widget.url: https://qbittorrent.{{ domain }}
      homepage.widget.username: "{{ secret_qbittorrent_user }}"
      homepage.widget.password: "{{ secret_qbittorrent_password }}"
      traefik.enable: "true"
      traefik.http.routers.qbittorrent.entrypoints: "websecure"
      traefik.http.routers.qbittorrent.rule: "Host(`qbittorrent.{{ domain }}`)"
      traefik.http.routers.qbittorrent.middlewares: "default@file"
      traefik.http.services.qbittorrent.loadbalancer.server.port: "8081"

  syncthing:
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/syncthing:latest
    networks:
      - default
      - external
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    volumes:
      - {{ path_app_config }}/syncthing:/config
      - {{ path_app_data }}/syncthing:/data
    labels:
      homepage.group: Other
      homepage.name: Syncthing
      homepage.icon: syncthing.png
      homepage.href: https://syncthing.{{ domain }}
      homepage.description: P2P file syncing
      traefik.enable: "true"
      traefik.http.routers.syncthing.entrypoints: "websecure"
      traefik.http.routers.syncthing.rule: "Host(`syncthing.{{ domain }}`)"
      traefik.http.routers.syncthing.middlewares: "default@file"
      traefik.http.services.syncthing.loadbalancer.server.port: "8384"

  vscode:
    extends:
      file: defaults.yaml
      service: default
    image: lscr.io/linuxserver/code-server:latest
    environment:
      PASSWORD: "{{ secret_vscode_password }}"
      PROXY_DOMAIN: "code.{{ domain }}"
    networks:
      - default
      - external
    ports:
      - 8443:8443/tcp
    volumes:
      - {{ path_app_config }}/vscode:/config
    labels:
      homepage.group: Other
      homepage.name: Visual Studio Code
      homepage.icon: vscode.png
      homepage.href: https://code.{{ domain }}
      homepage.description: Cloud IDE
      traefik.enable: "true"
      traefik.http.routers.code.entrypoints: "websecure"
      traefik.http.routers.code.rule: "Host(`code.{{ domain }}`)"
      traefik.http.routers.code.middlewares: "default@file"

  # Management

  portainer:
    extends:
      file: defaults.yaml
      service: default
    image: portainer/portainer-ce:latest
    network_mode: bridge
    ports:
      - 8001:8000
      - 9443:9443
    restart: "always"
    volumes:
      - {{ path_app_data }}/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock

  watchtower:
    extends:
      file: defaults.yaml
      service: default
    image: containrrr/watchtower
    networks:
      - default
      - external
    environment:
      WATCHTOWER_SCHEDULE: "0 2 * * *"
      WATCHTOWER_CLEANUP: "true"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  yacht:
    extends:
      file: defaults.yaml
      service: default
    image: selfhostedpro/yacht
    networks:
      - default
      - external
    ports:
      - 8000:8000
    volumes:
      - {{ path_app_config }}/yacht:/config
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default:
    internal: true
    ipam:
      config:
        - subnet: 172.16.80.0/24
  external:
    ipam:
      config:
        - subnet: 10.10.250.0/24

version: "3.6"
